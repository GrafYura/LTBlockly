// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.pl');

goog.require('Blockly.Msg');

Blockly.Msg["ADD_COMMENT"] = "Dodaj Komentarz";
Blockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Nie można usunąć zmiennej '%1', ponieważ jest częścią definicji funkcji '%2'";
Blockly.Msg["CHANGE_VALUE_TITLE"] = "Zmień wartość:";
Blockly.Msg["CLEAN_UP"] = "Uporządkuj Bloki";
Blockly.Msg["COLLAPSE_ALL"] = "Zwiń Bloki";
Blockly.Msg["COLLAPSE_BLOCK"] = "Zwiń Klocek";
Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "kolor 1";
Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "kolor 2";
Blockly.Msg["COLOUR_BLEND_HELPURL"] = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg["COLOUR_BLEND_RATIO"] = "proporcja";
Blockly.Msg["COLOUR_BLEND_TITLE"] = "wymieszaj";
Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Miesza dwa kolory w danej proporcji (0.0 - 1.0).";
Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Wybierz kolor z palety.";
Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
Blockly.Msg["COLOUR_RANDOM_TITLE"] = "losowy kolor";
Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Wybierz kolor w sposób losowy.";
Blockly.Msg["COLOUR_RGB_BLUE"] = "niebieski";
Blockly.Msg["COLOUR_RGB_GREEN"] = "zielony";
Blockly.Msg["COLOUR_RGB_HELPURL"] = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg["COLOUR_RGB_RED"] = "czerwony";
Blockly.Msg["COLOUR_RGB_TITLE"] = "kolor z";
Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "Utwórz kolor składający sie z podanej ilości czerwieni, zieleni i błękitu. Zakres wartości: 0 do 100.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "przerwij pętlę";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "przejdź do kolejnej iteracji pętli";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Przerwij działanie pętli.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Pomiń resztę pętli i kontynuuj w kolejnej iteracji.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Uwaga: Ten klocek może być użyty tylko wewnątrz pętli.";
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "dla każdego elementu %1 listy %2";
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "Przypisz zmiennej '%1' kolejno wartość każdego elementu listy, a następnie wykonaj kilka instrukcji.";
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg["CONTROLS_FOR_TITLE"] = "licz z %1 od %2 do %3 co %4 (wartość kroku)";
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Zmiennej '%1' przypisuje wartości z podanego zakresu z podanym interwałem i wykonuje zadane bloki.";
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Dodaj warunek do klocka „jeśli”.";
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "Dodaj ostatni zawsze prawdziwy warunek do klocka „jeśli”.";
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Dodaj, usuń lub zmień kolejność czynności, żeby zmodyfikować ten klocek „jeśli”.";
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "w przeciwnym razie";
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "w przeciwnym razie, jeśli";
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "jeśli";
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "Jeśli warunek jest spełniony, wykonaj zadane czynności.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "Jeśli warunek jest spełniony, wykonaj pierwszy blok instrukcji.  W przeciwnym razie, wykonaj drugi blok instrukcji.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "Jeśli pierwszy warunek jest spełniony, wykonaj pierwszy blok instrukcji.  W przeciwnym razie, jeśli drugi warunek jest spełniony, wykonaj drugi blok instrukcji.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "Jeśli pierwszy warunek jest spełniony, wykonaj pierwszy blok czynności.  W przeciwnym razie jeśli drugi warunek jest spełniony, wykonaj drugi blok czynności.  Jeżeli żaden z warunków nie zostanie spełniony, wykonaj ostatni blok czynności.";
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "wykonaj";
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "powtórz %1 razy";
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Wykonaj niektóre instrukcje kilka razy.";
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "powtarzaj aż do";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "powtarzaj dopóki";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Dopóki wyrażenie jest nieprawdziwe, wykonaj zadane czynności.";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Dopóki wyrażenie jest prawdziwe, wykonaj zadane czynności.";
Blockly.Msg["DELETE_ALL_BLOCKS"] = "Usunąć wszystkie klocki z %1?";
Blockly.Msg["DELETE_BLOCK"] = "Usuń Klocek";
Blockly.Msg["DELETE_VARIABLE"] = "Usuń zmienną '%1'";
Blockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "Usunąć %1 wystąpień zmiennej '%2'?";
Blockly.Msg["DELETE_X_BLOCKS"] = "Usuń %1 Bloki(ów)";
Blockly.Msg["DISABLE_BLOCK"] = "Wyłącz Klocek";
Blockly.Msg["DUPLICATE_BLOCK"] = "Powiel";
Blockly.Msg["DUPLICATE_COMMENT"] = "Zduplikowany komentarz";
Blockly.Msg["ENABLE_BLOCK"] = "Włącz Blok";
Blockly.Msg["EXPAND_ALL"] = "Rozwiń Bloki";
Blockly.Msg["EXPAND_BLOCK"] = "Rozwiń Klocek";
Blockly.Msg["EXTERNAL_INPUTS"] = "Zewnętrzne Wejścia";
Blockly.Msg["HELP"] = "Pomoc";
Blockly.Msg["INLINE_INPUTS"] = "Wbudowane Wejścia";
Blockly.Msg["IOS_CANCEL"] = "Anuluj";
Blockly.Msg["IOS_ERROR"] = "Błąd";
Blockly.Msg["IOS_OK"] = "OK";
Blockly.Msg["IOS_PROCEDURES_ADD_INPUT"] = "+ Dodaj Wejście";
Blockly.Msg["IOS_PROCEDURES_ALLOW_STATEMENTS"] = "Zezwalaj na czynności.";
Blockly.Msg["IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR"] = "Ta funkcja ma zduplikowane wejścia.";
Blockly.Msg["IOS_PROCEDURES_INPUTS"] = "WEJŚCIA";
Blockly.Msg["IOS_VARIABLES_ADD_BUTTON"] = "Dodaj";
Blockly.Msg["IOS_VARIABLES_ADD_VARIABLE"] = "+ Dodaj Zmienną";
Blockly.Msg["IOS_VARIABLES_DELETE_BUTTON"] = "Usuń";
Blockly.Msg["IOS_VARIABLES_EMPTY_NAME_ERROR"] = "Nie możesz utworzyć funkcji bez nazwy.";
Blockly.Msg["IOS_VARIABLES_RENAME_BUTTON"] = "Zmień nazwę";
Blockly.Msg["IOS_VARIABLES_VARIABLE_NAME"] = "Nazwa zmiennej";
Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "utwórz pustą listę";
Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Zwraca listę o długości 0, nie zawierającą danych";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "lista";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Dodaj, usuń lub zmień kolejność sekcji aby przekonfigurować blok tej listy.";
Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "utwórz listę z";
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Dodaj element do listy.";
Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Utwórz listę z dowolną ilością elementów.";
Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "pierwszy";
Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "# od końca";
Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "#";
Blockly.Msg["LISTS_GET_INDEX_GET"] = "pobierz";
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "zabierz";
Blockly.Msg["LISTS_GET_INDEX_LAST"] = "ostatni";
Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "losowy";
Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "usuń";
Blockly.Msg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Zwraca pierwszy element z listy.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Zwraca element z konkretnej pozycji na liście.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Zwraca ostatni element z listy.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Zwraca losowy element z listy.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Usuwa i zwraca pierwszy element z listy.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Usuwa i zwraca element z określonej pozycji na liście.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Usuwa i zwraca ostatni element z listy.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Usuwa i zwraca losowy element z listy.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Usuwa pierwszy element z listy.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Usuwa element z określonej pozycji na liście.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Usuwa ostatni element z listy.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Usuwa losowy element z listy.";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "do # od końca";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "do #";
Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "do ostatniego";
Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "utwórz listę podrzędną od pierwszego";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "utwórz listę podrzędną z # od końca";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "utwórz listę podrzędną z #";
Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "";
Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Tworzy kopię żądanej części listy.";
Blockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 to ostatni element.";
Blockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 to pierwszy element.";
Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "znajdź pierwsze wystąpienie elementu";
Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_LAST"] = "znajdź ostatanie wystąpienie elementu";
Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Zwraca indeks pierwszego/ostatniego wystąpienia elementu z listy. Zwraca %1, jeśli nie zostanie znaleziony.";
Blockly.Msg["LISTS_INLIST"] = "na liście";
Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 jest pusta";
Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Zwraca \"prawda\" jeśli lista jest pusta.";
Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg["LISTS_LENGTH_TITLE"] = "długość %1";
Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Zwraca długość listy.";
Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_REPEAT_TITLE"] = "utwórz listę powtarzając %1 %2 razy.";
Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Tworzy listę zawierającą podaną wartość powtórzoną żądaną ilość razy.";
Blockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
Blockly.Msg["LISTS_REVERSE_MESSAGE0"] = "odwróć %1";
Blockly.Msg["LISTS_REVERSE_TOOLTIP"] = "Odwraca kolejność danych w kopii listy.";
Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "jako";
Blockly.Msg["LISTS_SET_INDEX_INSERT"] = "wstaw w";
Blockly.Msg["LISTS_SET_INDEX_SET"] = "ustaw";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Wstawia element na początku listy.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Wstawia element na żądanej pozycji listy.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Dodaj element na koniec listy.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Wstawia element w losowym miejscu na liście.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Ustawia pierwszy element na liście.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Ustawia element w określonym miejscu na liście.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Ustawia ostatni element na liście.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Ustawia losowy element na liście.";
Blockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "rosnąco";
Blockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "malejąco";
Blockly.Msg["LISTS_SORT_TITLE"] = "sortuj %1 %2 %3";
Blockly.Msg["LISTS_SORT_TOOLTIP"] = "Sortuj kopię listy.";
Blockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "alfabetycznie, ignoruj wielkość liter";
Blockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "numerycznie";
Blockly.Msg["LISTS_SORT_TYPE_TEXT"] = "alfabetycznie";
Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "utwórz listę z tekstu";
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "utwórz tekst z listy";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Łączy listę tekstów w jeden tekst, rozdzielany separatorem.";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Rozdziela tekst zgodnie z separatorem tworząc listę z powstałych elementów.";
Blockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "z separatorem";
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "fałsz";
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Zwraca 'prawda' lub 'fałsz'.";
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "prawda";
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://pl.wikipedia.org/wiki/Nierówność";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Zwraca \"prawda\", jeśli wejścia są identyczne.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Zwraca \"prawda\" jeśli pierwsze wejście jest większe od drugiego.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Zwraca \"prawda\", jeśli pierwsze wejście jest większe lub równe drugiemu.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Zwraca \"prawda\" jeśli pierwsze wejście jest mniejsze od drugiego.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Zwraca \"prawda\", jeśli pierwsze wejście jest mniejsze lub równe drugiemu.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Zwraca \"prawda\", jeśli wejścia nie są identyczne.";
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "nie %1";
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Zwraca \"prawda\", jeśli wejściu jest \"fałsz\". Zwraca \"fałsz\", jeśli na wejściu jest \"prawda\".";
Blockly.Msg["LOGIC_NULL"] = "nic";
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "Zwraca nic.";
Blockly.Msg["LOGIC_OPERATION_AND"] = "i";
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg["LOGIC_OPERATION_OR"] = "lub";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Zwraca \"prawda\" jeśli na obydwóch wejściach jest \"prawda\".";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Zwraca \"prawda\" jeśli co najmniej na jednyk wejściu jest \"prawda\".";
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "test";
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "jeśli fałsz";
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "jeśli prawda";
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Sprawdź warunek w „test”. Jeśli warunek jest prawdziwy, to zwróci „jeśli prawda”; jeśli nie jest prawdziwy to zwróci „jeśli fałsz”.";
Blockly.Msg["LT_ANY"] = "any";  // untranslated
Blockly.Msg["LT_CATEGORY_EVENTS"] = "Events";  // untranslated
Blockly.Msg["LT_EVENT_ON_DEVICE_DO_ACTIONS"] = "do actions %1";  // untranslated
Blockly.Msg["LT_EVENT_ON_DEVICE_TITLE"] = "Device type: %1%4Event on: %2%5Event type: %3";  // untranslated
Blockly.Msg["LT_EVENT_ON_DEVICE_TT"] = "Event on device.";  // untranslated
Blockly.Msg["LT_OFF"] = "off";  // untranslated
Blockly.Msg["LT_ON"] = "on";  // untranslated
Blockly.Msg["LT_SET_STATE_ON_DEVICE_TITLE"] = "Device type: %1%4Set on: %2%5State: %3";  // untranslated
Blockly.Msg["LT_SET_STATE_ON_DEVICE_TT"] = "Change state on device.";  // untranslated
Blockly.Msg["LT_SWITCH"] = "switch";  // untranslated
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+";
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://pl.wikipedia.org/wiki/Arytmetyka";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Zwróć sumę dwóch liczb.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Zwróć iloraz dwóch liczb.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Zwróć różnicę dwóch liczb.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Zwróć iloczyn dwóch liczb.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Zwróć pierwszą liczbę podniesioną do potęgi o wykładniku drugiej liczby.";
Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg["MATH_CHANGE_TITLE"] = "zmień %1 o %2";
Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "Dodaj liczbę do zmiennej '%1'.";
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://pl.wikipedia.org/wiki/Stała_(matematyka)";
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Zwróć jedną wspólną stałą: π (3.141), e (2.718...), φ (1.618...), sqrt(2) (1.414...), sqrt(½) (0.707...) lub ∞ (nieskończoność).";
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "ogranicz %1 z dołu %2 z góry %3";
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Ogranicz liczbę, aby była w określonych granicach (włącznie).";
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "/";
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "jest podzielna przez";
Blockly.Msg["MATH_IS_EVEN"] = "jest parzysta";
Blockly.Msg["MATH_IS_NEGATIVE"] = "jest ujemna";
Blockly.Msg["MATH_IS_ODD"] = "jest nieparzysta";
Blockly.Msg["MATH_IS_POSITIVE"] = "jest dodatnia";
Blockly.Msg["MATH_IS_PRIME"] = "jest liczbą pierwszą";
Blockly.Msg["MATH_IS_TOOLTIP"] = "Sprawdź, czy liczba jest parzysta, nieparzysta, pierwsza, całkowita, dodatnia, ujemna, lub czy jest podzielna przez podaną liczbę. Zwraca wartość \"prawda\" lub \"fałsz\".";
Blockly.Msg["MATH_IS_WHOLE"] = "jest liczbą całkowitą";
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://pl.wikipedia.org/wiki/Modulo";
Blockly.Msg["MATH_MODULO_TITLE"] = "reszta z dzielenia %1 przez %2";
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "Zwróć resztę z dzielenia dwóch liczb przez siebie.";
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×";
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "Liczba.";
Blockly.Msg["MATH_ONLIST_HELPURL"] = "";
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "średnia elementów listy";
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "maksymalna wartość z listy";
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "mediana listy";
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "minimalna wartość z listy";
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "dominanty listy";
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "losowy element z listy";
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "odchylenie standardowe listy";
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "suma elementów listy";
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Zwróć średnią (średnią arytmetyczną) wartości liczbowych z listy.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Zwróć największą liczbę w liście.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Zwróć medianę listy.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Zwróć najmniejszą liczbę w liście.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Zwróć listę najczęściej występujących elementów w liście.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Zwróć losowy element z listy.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Zwróć odchylenie standardowe listy.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Zwróć sumę wszystkich liczb z listy.";
Blockly.Msg["MATH_POWER_SYMBOL"] = "^";
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "losowy ułamek";
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Zwróć losowy ułamek między 0.0 (włącznie), a 1.0 (wyłącznie).";
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "losowa liczba całkowita od %1 do %2";
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Zwróć losową liczbę całkowitą w ramach dwóch wyznaczonych granic, włącznie.";
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://pl.wikipedia.org/wiki/Zaokrąglanie";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "zaokrąglij";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "zaokrąglij w dół";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "zaokrąglij w górę";
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "Zaokrąglij w górę lub w dół.";
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://pl.wikipedia.org/wiki/Pierwiastek_kwadratowy";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "wartość bezwzględna";
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "pierwiastek kwadratowy";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Zwróć wartość bezwzględną danej liczby.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Zwróć e do potęgi danej liczby.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Zwróć logarytm naturalny danej liczby.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Zwraca logarytm dziesiętny danej liczby.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Zwróć negację danej liczby.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Zwróć 10 do potęgi danej liczby.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Zwróć pierwiastek kwadratowy danej liczby.";
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-";
Blockly.Msg["MATH_TRIG_ACOS"] = "arccos";
Blockly.Msg["MATH_TRIG_ASIN"] = "arcsin";
Blockly.Msg["MATH_TRIG_ATAN"] = "arctg";
Blockly.Msg["MATH_TRIG_COS"] = "cos";
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://pl.wikipedia.org/wiki/Funkcje_trygonometryczne";
Blockly.Msg["MATH_TRIG_SIN"] = "sin";
Blockly.Msg["MATH_TRIG_TAN"] = "tg";
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Zwróć arcus cosinus danej liczby.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Zwróć arcus sinus danej liczby.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Zwróć arcus tangens danej liczby.";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Zwróć wartość cosinusa o stopniu (nie w radianach).";
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Zwróć wartość sinusa o stopniu (nie w radianach).";
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Zwróć tangens o stopniu (nie w radianach).";
Blockly.Msg["NEW_COLOUR_VARIABLE"] = "Utwórz zmienną colour";
Blockly.Msg["NEW_NUMBER_VARIABLE"] = "Utwórz zmienną typu number";
Blockly.Msg["NEW_STRING_VARIABLE"] = "Utwórz zmienną typu string";
Blockly.Msg["NEW_VARIABLE"] = "Utwórz zmienną...";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "Nowa nazwa zmiennej:";
Blockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "Nowy typ zmiennej:";
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";
Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "zezwól na czynności";
Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "z:";
Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://pl.wikipedia.org/wiki/Podprogram";
Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Uruchom zdefiniowaną przez użytkownika funkcję '%1'.";
Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://pl.wikipedia.org/wiki/Podprogram";
Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Uruchom zdefiniowaną przez użytkownika funkcję '%1' i użyj jej wyjścia.";
Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "z:";
Blockly.Msg["PROCEDURES_CREATE_DO"] = "Utwórz '%1'";
Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "Opisz tę funkcję...";
Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";
Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "zrób coś";
Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "do";
Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Tworzy funkcję nie posiadającą wyjścia.";
Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "zwróć";
Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Tworzy funkcję posiadającą wyjście.";
Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Uwaga: Ta funkcja ma powtórzone parametry.";
Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Podświetl definicję funkcji";
Blockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "Jeśli warunek jest spełniony zwróć drugą wartość.";
Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Uwaga: Ten klocek może być używany tylko w definicji funkcji.";
Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "nazwa wejścia:";
Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Dodaj wejście do funkcji.";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "wejścia";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Dodaj, usuń lub zmień kolejność wejść tej funkcji.";
Blockly.Msg["REDO"] = "Ponów";
Blockly.Msg["REMOVE_COMMENT"] = "Usuń komentarz";
Blockly.Msg["RENAME_VARIABLE"] = "Zmień nazwę zmiennej...";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "Zmień nazwy wszystkich '%1' zmiennych na:";
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_APPEND_TITLE"] = "dodaj tekst %2 do %1";
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "Dołącz tekst do zmiennej '%1'.";
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "na małe litery";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "na Pierwsza Duża";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "na WIELKIE LITERY";
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Zwraca kopię tekstu z odwruconą wielkością liter.";
Blockly.Msg["TEXT_CHARAT_FIRST"] = "pobierz pierwszą literę";
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "pobierz literę # od końca";
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "pobierz literę #";
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg["TEXT_CHARAT_LAST"] = "pobierz ostatnią literę";
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "pobierz losową literę";
Blockly.Msg["TEXT_CHARAT_TAIL"] = "";
Blockly.Msg["TEXT_CHARAT_TITLE"] = "w tekście %1 %2";
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Zwraca literę z określonej pozycji.";
Blockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";
Blockly.Msg["TEXT_COUNT_MESSAGE0"] = "policz %1 w %2";
Blockly.Msg["TEXT_COUNT_TOOLTIP"] = "Liczy ile razy dany tekst występuje w innym tekście.";
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Dodaj element do tekstu.";
Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "połącz";
Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Dodaj, usuń lub zmień kolejność sekcji, aby zmodyfikować klocek tekstowy.";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "do # litery od końca";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "do # litery";
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "do ostatniej litery";
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "w tekście";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "pobierz podciąg od pierwszej litery";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "pobierz podciąg od # litery od końca";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "pobierz podciąg od # litery";
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "";
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Zwraca określoną część tekstu.";
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "znajdź pierwsze wystąpienie tekstu";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "znajdź ostatnie wystąpienie tekstu";
Blockly.Msg["TEXT_INDEXOF_TITLE"] = "w tekście %1 %2 %3";
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Zwraca indeks pierwszego/ostatniego wystąpienia pierwszego tekstu w drugim tekście. Zwraca wartość %1, jeśli tekst nie został znaleziony.";
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 jest pusty";
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Zwraca prawda (true), jeśli podany tekst jest pusty.";
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "utwórz tekst z";
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "Tworzy fragment tekstu, łącząc ze sobą dowolną liczbę tekstów.";
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_LENGTH_TITLE"] = "długość %1";
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Zwraca liczbę liter (łącznie ze spacjami) w podanym tekście.";
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg["TEXT_PRINT_TITLE"] = "wydrukuj %1";
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Wyświetl określony tekst, liczbę lub inną wartość.";
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Zapytaj użytkownika  o liczbę.";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Zapytaj użytkownika o jakiś tekst.";
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "poproś o liczbę z tą wiadomością";
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "poproś o tekst z tą wiadomością";
Blockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
Blockly.Msg["TEXT_REPLACE_MESSAGE0"] = "zamień %1 na %2 w %3";
Blockly.Msg["TEXT_REPLACE_TOOLTIP"] = "Zastąp wszystkie wystąpienia danego tekstu innym.";
Blockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";
Blockly.Msg["TEXT_REVERSE_MESSAGE0"] = "odwróć %1";
Blockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Odwraca kolejność znaków w tekście.";
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://pl.wikipedia.org/wiki/Tekstowy_typ_danych";
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "Litera, wyraz lub linia tekstu.";
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "usuń spacje po obu stronach";
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "usuń spacje z lewej strony";
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "usuń spacje z prawej strony";
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Zwraca kopię tekstu z usuniętymi spacjami z jednego lub z obu końców tekstu.";
Blockly.Msg["TODAY"] = "Dzisiaj";
Blockly.Msg["UNDO"] = "Cofnij";
Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "element";
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "Utwórz klocek 'ustaw %1'";
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Zwraca wartość tej zmiennej.";
Blockly.Msg["VARIABLES_SET"] = "przypisz %1 wartość %2";
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "Utwórz klocek 'pobierz %1'";
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "Wartości zmiennej i  wejście będą identyczne.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS"] = "Zmienna o nazwie '%1' już istnieje.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Zmienna o nazwie '%1' już istnieje i jest typu '%2'.";
Blockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Powiedz coś...";
Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];
Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
Blockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];
Blockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];
Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
Blockly.Msg["LISTS_GET_INDEX_HELPURL"] = Blockly.Msg["LISTS_INDEX_OF_HELPURL"];
Blockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"];

Blockly.Msg["MATH_HUE"] = "230";
Blockly.Msg["LOOPS_HUE"] = "120";
Blockly.Msg["LISTS_HUE"] = "260";
Blockly.Msg["LOGIC_HUE"] = "210";
Blockly.Msg["VARIABLES_HUE"] = "330";
Blockly.Msg["TEXTS_HUE"] = "160";
Blockly.Msg["PROCEDURES_HUE"] = "290";
Blockly.Msg["COLOUR_HUE"] = "20";
Blockly.Msg["VARIABLES_DYNAMIC_HUE"] = "310";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//      Blocky translates         //////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Blockly.Msg["LT_CATEGORY_TYPES"] = "Types";
Blockly.Msg["BLINDS_SELECT"] = "Select action";
Blockly.Msg["BLINDS_SET"] = "Set level";
Blockly.Msg["BLINDS_STOP"] = "Stop";
Blockly.Msg["BLINDS_LEVEL"] = "Level";
Blockly.Msg["LT_CONTROL_BLINDS_TT"] = "Allows to control blinds";
Blockly.Msg["LT_CATEGORY_TEXT"] = "Text";
Blockly.Msg["LT_SECONDS"] = "s";
Blockly.Msg["LT_CATEGORY_AUTOMATION"] = "Automation";
Blockly.Msg["LT_CATEGORY_SENSORS"] = "Sensors";
Blockly.Msg["LT_CATEGORY_STATUS"] = "Devices";
Blockly.Msg["LT_TEXT_SPRINTF_TOOLTIP"] = "sprintf function";
Blockly.Msg["LT_TEXT_SPRINTF_MUTATOR"] = "Mutation";
Blockly.Msg["LT_TEXT_SPRINTF_ONOFF"] = "On/Off";
Blockly.Msg["LT_CATEGORY_LOGIC"] = "Logic";
Blockly.Msg["LT_CATEGORY_CONTROL"] = "Device control";
Blockly.Msg["LT_CATEGORY_DATETIME"] = "Date and time";
Blockly.Msg["LT_CATEGORY_NOTIFICATION"] = "Notification";
Blockly.Msg["LT_SET_STATE_ON_VENTILATION"] = "Ventilation: %1 State: %2";
Blockly.Msg["LT_TEXT_SPRINTF_SENS"] = "Sensor";
Blockly.Msg["LT_TEXT_SPRINTF_DIMMER"] = "Dimmer-lamp";
Blockly.Msg["LT_TEXT_SPRINTF_VARIABLE"] = "Variable";
Blockly.Msg["LT_TEXT_SPRINTF_RGB"] = "RGB-lamp";
Blockly.Msg["LT_TEXT_SPRINTF_CONDITIONER"] = "AC unit";
Blockly.Msg["LT_TEXT_SPRINTF_HEATING"] = "Valve-heating";
Blockly.Msg["LT_TEXT_SPRINTF_FANCOIL"] = "Fancoil";
Blockly.Msg["LT_TEXT_SPRINTF_CC"] = "Climate-control";
Blockly.Msg["LT_TEXT_SPRINTF_VENT"] = "Ventilation";
Blockly.Msg["LT_TEXT_SPRINTF_TYPE"] = "Type";
Blockly.Msg["LT_OTHER_ON"] = "On";
Blockly.Msg["LT_OTHER_OFF"] = "Off";
Blockly.Msg["LT_OTHER_TOGGLE"] = "Toggle";
Blockly.Msg["LT_OTHER_EXTENDED"] = "Extended";
Blockly.Msg["LT_OTHER_POWER"] = "Power";
Blockly.Msg["LT_OTHER_TEMTERATURA"] = "Temperatura";
Blockly.Msg["LT_TEXT_COMPARE"] = "Compare %1 and %2";
Blockly.Msg["LT_STATUS_SET_ON_OFF"] = "Device: %1 turn %2";
Blockly.Msg["LT_OTHER_BYTE"] = "byte";
Blockly.Msg["LT_SIMPLE_EVENT_ON_DEVICE"] = "Script. Auto Off %2 time %3s %4On %1";
Blockly.Msg["LT_SIMPLE_EVENT_ON_DEVICE1"] = "Script. Auto Off";
Blockly.Msg["LT_SIMPLE_EVENT_ON_DEVICE2"] = " time %2s %3On %1";
Blockly.Msg["LT_TEXT_SPRINTF_DEV"] = "Device";
Blockly.Msg["LT_TEXT_SPRINTF_TYPE_ONOFF"] = "On/Off";
Blockly.Msg["LT_TEXT_SPRINTF_TYPE_BRGHST"] = "Brightness in %";
Blockly.Msg["LT_TEXT_SPRINTF_TYPE_COLOR"] = "Color in HEX";
Blockly.Msg["LT_TEXT_SPRINTF_TYPE_INTPRT"] = "Integer part";
Blockly.Msg["LT_TEXT_SPRINTF_TYPE_FRCT"] = "Fractional part";
Blockly.Msg["LT_TEXT_SPRINTF_TYPE_FLT"] = "Float number";
Blockly.Msg["LT_TEXT_SPRINTF_TYPE_MODE"] = "Mode";
Blockly.Msg["LT_TEXT_SPRINTF_TYPE_TEMP"] = "Temperature";
Blockly.Msg["LT_TEXT_SPRINTF_TYPE_CO2"] = "CO2";
Blockly.Msg["LT_TEXT_SPRINTF_TYPE_POWER"] = "Power";
Blockly.Msg["LT_TEXT_SPRINTF_TYPE_FAN"] = "Fan";
Blockly.Msg["LT_TEXT_SPRINTF_TYPE_HB"] = "Horizontal blinds";
Blockly.Msg["LT_TEXT_SPRINTF_TYPE_VB"] = "Vertical blinds";
Blockly.Msg["LT_TEXT_SPRINTF_TYPE_SENSTEMP"] = "Sensors temperature";
Blockly.Msg["LT_RESET_LEAK_SENSOR"] = "Reset leak sensor %1 after %2 seconds";
Blockly.Msg["LT_OTHER_SENSOR"] = "Sensor";
Blockly.Msg["LT_AUTOMATION_IS_ON_DSCR"] = "Is automation turned on %1";
Blockly.Msg["LT_OTHER_FRATIONAL_PART"] = "Fractional part";
Blockly.Msg["LT_AUTOMATION_IS_DEF_DSCR"] = "Is defined %1";
Blockly.Msg["LT_OTHER_INTEGER_PART"] = "Integer part";
Blockly.Msg["LT_OTHER_DOOR_SENSOR"] = "Door-sensor";
Blockly.Msg["LT_RGB_CONTROL"] = "Rgb: %1 State: %2";
Blockly.Msg["LT_OTHER_COLOUR"] = "Colour";
Blockly.Msg["LT_OTHER_TIME"] = "Time";
Blockly.Msg["LT_OTHER_BRIGHTNESS"] = "Brightness";
Blockly.Msg["LT_IR_SENDER"] = "IR-sender  Custom";
Blockly.Msg["LT_IRT"] = "ir-transmitter";
Blockly.Msg["LT_SELECT_REMOTE_CONTROL"] = "Select remote-control";
Blockly.Msg["LT_IR CUSTOM_COMMAND"] = "IR command: 0x";
Blockly.Msg["LT_IR_REMOTE_COMMAND"] = "Select command";
Blockly.Msg["LT_IR_REMOTE_NO_COMMAND"] = "No commands!";
Blockly.Msg["LT_IR_SENDER_TT"] = "Send ir command from remote-control or custom";Blockly.Msg["LT_NOTIFICATION_TEXTBOX"] = "Virtual %1 send message %2";
Blockly.Msg["LT_CONDITIONER_MODE_COOL"] = "Cool";
Blockly.Msg["LT_CONDITIONER_MODE_DRY"] = "Dry";
Blockly.Msg["LT_CONDITIONER_MODE_FAN"] = "Fan";
Blockly.Msg["LT_CONDITIONER_MODE_HEAT"] = "Heat";
Blockly.Msg["LT_CONDITIONER_MODE_AUTO"] = "Auto";
Blockly.Msg["LT_CONDITIONER_FAN_STRONG"] = "Strong airflow";
Blockly.Msg["LT_CONDITIONER_FAN_EXTRA"] = "Extra strong airflow";
Blockly.Msg["LT_CONDITIONER_FAN_AUTO"] = "Auto";
Blockly.Msg["LT_CONDITIONER_FAN_MEDIUM"] = "Medium airflow";
Blockly.Msg["LT_CONDITIONER_FAN_WEAK"] = "Weak airflow";
Blockly.Msg["LT_OTHER_PUSH"] = "Push";
Blockly.Msg["LT_OTHER_NO_MESSAGE"] = "No message";
Blockly.Msg["LT_CONDITIONER_HV_LEFT"] = "Left";
Blockly.Msg["LT_CONDITIONER_HV_EXLEFT"] = "Extreme left";
Blockly.Msg["LT_CONDITIONER_HV_MIDD"] = "Middle";
Blockly.Msg["LT_CONDITIONER_FAN_LFTRGHT"] = "Both left and right";
Blockly.Msg["LT_CONDITIONER_FAN_RIGHT"] = "Right airflow";
Blockly.Msg["LT_CONDITIONER_FAN_EXRIGHT"] = "Extreme right";
Blockly.Msg["LT_CONDITIONER_FAN_ULTR"] = "Ultra wide";
Blockly.Msg["LT_OTHER_NORMAL"] = "Normal";
Blockly.Msg["LT_CONDITIONER_VV_LEFT"] = "Extreme high";
Blockly.Msg["LT_CONDITIONER_VV_MIDD"] = "High";
Blockly.Msg["LT_CONDITIONER_VV_EXRIGHT"] = "Low";
Blockly.Msg["LT_CONDITIONER_VV_RIGHT"] = "Middle";
Blockly.Msg["LT_CONDITIONER_VV_EXLEFT"] = "Auto";
Blockly.Msg["LT_CONDITIONER_VV_ULTR"] = "Ultra wide";
Blockly.Msg["LT_CONDITIONER_VV_LFTRGHT"] = "Extreme low";
Blockly.Msg["LT_OTHER_INTERCOM"] = "Intercom";
Blockly.Msg["LT_CONDITIONER_HV_LEFT"] = "Left";
Blockly.Msg["LT_CONDITIONER_HV_MIDD"] = "Middle";
Blockly.Msg["LT_CONDITIONER_HV_EXRIGHT"] = "Extreme right";
Blockly.Msg["LT_CONDITIONER_HV_RIGHT"] = "Right airflow";
Blockly.Msg["LT_CONDITIONER_HV_LFTRGHT"] = "Both left and right";
Blockly.Msg["LT_CONDITIONER_HV_EXLEFT"] = "Extreme left";
Blockly.Msg["LT_CONDITIONER_HV_ULTR"] = "Ultra wide";
Blockly.Msg["LT_OTHER_IMPORTANT"] = "Important";
Blockly.Msg["LT_OTHER_CRITICAL"] = "Critical";
Blockly.Msg["LT_LOG_MESSAGE"] = "Message to log %1";
Blockly.Msg["LT_LOG_ERROR"] = "Error to log %1";
Blockly.Msg["LT_CONDITIONER_TOOLTIP"] = "Controls of conditioner";
Blockly.Msg["LT_SPEAKER_CONTROL"] = "Speaker: %1 Act: %2";
Blockly.Msg["LT_CONDITIONER_DSCRP"] = "Conditioner: %1 Act: %2";
Blockly.Msg["LT_TEXT_CONVERTNUMB_TO_TEXT"] = "Number to text %1";
Blockly.Msg["LT_TEXT_CONVERTTEXT_TO_NUMB"] = "Text to number %1";
Blockly.Msg["LT_DATA_GET_TIME"] = "Get %1";
Blockly.Msg["LT_DATA_TIME_SEC"] = "Seconds";
Blockly.Msg["LT_DATA_TIME_MIN"] = "Minutes";
Blockly.Msg["LT_DATA_TIME_HRS"] = "Hours";
Blockly.Msg["LT_DATA_TIME_MSEC"] = "Miliseconds";
Blockly.Msg["LT_DATA_TIME_WDAY"] = "Weak day";
Blockly.Msg["LT_DATA_TIME_YEAR"] = "Year";
Blockly.Msg["LT_DATA_TIME_DAY"] = "Day";
Blockly.Msg["LT_DATA_TIME_MNTH"] = "Mounth";
Blockly.Msg["LT_DATA_MONDAY"] = "Monday";
Blockly.Msg["LT_DATA_MUTATOR"] = "Days of the week";
Blockly.Msg["LT_DATA_TUESDAY"] = "Tuesday";
Blockly.Msg["LT_DATA_WEDNESDAY"] = "Wednesday";
Blockly.Msg["LT_DATA_THURSDAY"] = "Thursday";
Blockly.Msg["LT_DATA_SATURDAY"] = "Saturday";
Blockly.Msg["LT_DATA_SUNDAY"] = "Sunday";
Blockly.Msg["LT_DATA_FRIDAY"] = "Friday";
Blockly.Msg["LT_DATA_TIMEINRANGE"] = "Time in range %1-%2";
Blockly.Msg["LT_DATA_WEEKDAY"] = "Week day:";
Blockly.Msg["LT_OTHER_PLAY"] = "PLAY";
Blockly.Msg["LT_OTHER_PAUSE"] = "PAUSE";
Blockly.Msg["LT_OTHER_MUTE"] = "MUTE";
Blockly.Msg["LT_OTHER_CONTINUE"] = "CONTINUE";
Blockly.Msg["LT_OTHER_SYNC"] = "SYNC";
Blockly.Msg["LT_OTHER_SYNCTODEV"] = "SYNC TWO DEVICES";
Blockly.Msg["LT_OTHER_MOVETODEV"] = "MOVE";
Blockly.Msg["LT_MT_TIME"] = "Time";
Blockly.Msg["LT_MT_VOLUME"] = "Volume";
Blockly.Msg["LT_MT_POSITION"] = "Position";
Blockly.Msg["LT_MT_START_FROM"] = "Start from";
Blockly.Msg["LT_MT_PRIORITY"] = "Priority";
Blockly.Msg["LT_HEATING_DEVICE"] = "Device";
Blockly.Msg["LT_HEATING_MODE"] = "Mode";
Blockly.Msg["LT_HEATING_ACTION"] = "On/Off";
Blockly.Msg["LT_EVENT_TIME_MINUTES"] = "minutes";
Blockly.Msg["LT_EVENT_TIME_PERIOD"] = "Timer. Type:%1 period: %2 %4 %3";
Blockly.Msg["LT_EVENT_TIME_SECONDS"] = "seconds";
Blockly.Msg["LT_OTHER_STOP"] = "STOP";
Blockly.Msg["LT_DIMER_BRIGHTNES"] = "Brightness";
Blockly.Msg["LT_DIMER_MESSAGE"] = "Dimmer: %1 State: %2";
Blockly.Msg["LT_HEATING_MESSAGE"] = "Heating: %1 Temperature: %2";
Blockly.Msg["LT_OTHER_GET"] = "Get";
Blockly.Msg["LT_OTHER_BYTE"] = "Byte";
Blockly.Msg["LT_OTHER_TEMTERATURA"] = "Temperatura";
Blockly.Msg["LT_CATEGORY_COLOUR_AUTOMATION"] = "#006e42";
Blockly.Msg["LT_CATEGORY_COLOUR_TEXT"] = "#006e70";
Blockly.Msg["LT_CATEGORY_COLOUR_TYPES"] = "#00cc00";
Blockly.Msg["LT_CATEGORY_COLOUR_SENSORS"] = "#00cc44";
Blockly.Msg["LT_CATEGORY_COLOUR_STATUS"] = "#5a9c42";
Blockly.Msg["LT_CATEGORY_COLOUR_LOGIC"] = "#a39828";
Blockly.Msg["LT_CATEGORY_COLOUR_CONTROL"] = "#9c6a1e";
Blockly.Msg["LT_CATEGORY_COLOUR_DATETIME"] = "#9e551f";
Blockly.Msg["LT_CATEGORY_COLOUR_NOTIFICATION"] = "#9b3328";
Blockly.Msg["LT_CATEGORY_COLOUR_EVENTS"] = "#941116";
Blockly.Msg["LT_CATEGORY_COLOUR_VARIABLES"] = "#003f72";
Blockly.Msg["LT_CATEGORY_COLOUR_FUNCTIONS"] = "#0d2265";
Blockly.Msg["LT_CATEGORY_COLOUR_LOOP"] = "#3b0d5c";
Blockly.Msg["LT_CATEGORY_COLOUR_MATH"] = "#8cff1a";
Blockly.Msg["LT_CATEGORY_COLOUR_OTHER"] = "#6b085c";
Blockly.Msg["LT_CATEGORY_COLOUR_TEAMPLATES"] = "#B3478F";
Blockly.Msg["LT_PUSH_MUTATOR"] = "Mutator";
Blockly.Msg["LT_SELF_STATUS"] = "Script status";
Blockly.Msg["LT_OTHER_USUAL"] = "Usual";
Blockly.Msg["LT_OPT"] = "Get byte from event";
Blockly.Msg["LT_STATUS_IS_ON"] = "Is on %1 or script %2";
Blockly.Msg["LT_HEATING_TEMP"] = "Temperature";
Blockly.Msg["LT_HEATING_CO2"] = "CO2";
Blockly.Msg["LT_HEATING_POWER"] = "Power";
Blockly.Msg["LT_OTHER_COMENT"] = "Coment";
Blockly.Msg["LT_CATEGORY_VARIABLES"] = "Variables";
Blockly.Msg["LT_CATEGORY_FUNCTIONS"] = "Functions";
Blockly.Msg["LT_CATEGORY_MATH"] = "Math";
Blockly.Msg["LT_CATEGORY_LOOP"] = "Loop";
Blockly.Msg["LT_CATEGORY_OTHER"] = "Other";
//----------------------------------------VARS---------------------------------------------------------------
Blockly.Msg["LT_CATEGORY_VARIABLES_NUMBER"] = "%5Global:%4 number:%1 name:%2 value:%3";
Blockly.Msg["LT_CATEGORY_VARIABLES_NUMBER_TOOLTIP"] = "Create a number variable";
Blockly.Msg["LT_CATEGORY_VARIABLES_ARRAY"] = "%5Global:%4 array type:%1 name:%2 size:%6 value:%3";
Blockly.Msg["LT_CATEGORY_VARIABLES_ARRAY_TOOLTIP"] = "Create a array variable";
Blockly.Msg["LT_CATEGORY_VARIABLES_TEXT"] = "%5Global:%4 max size:%2 text name:%1 value:%3";
Blockly.Msg["LT_CATEGORY_VARIABLES_TEXT_TOOLTIP"] = "Create a text variable";
Blockly.Msg["LT_CATEGORY_VARIABLES_GETTER"] = "%2get %1";
Blockly.Msg["LT_CATEGORY_VARIABLES_GETTER_TOOLTIP"] = "Get the value of a variable";
Blockly.Msg["LT_CATEGORY_VARIABLES_SETTER"] = "%2set: %1";
Blockly.Msg["LT_CATEGORY_VARIABLES_SETTER_TOOLTIP"] = "Set variable value";
Blockly.Msg["LT_CATEGORY_VARIABLES_GETTER_TYPE"] = 'Type:';
Blockly.Msg["LT_CATEGORY_VARIABLES_GETTER_INDEX"] = 'Index';
Blockly.Msg["LT_CATEGORY_VARIABLES_GETTER_VALUE"] = 'Value:';
Blockly.Msg["LT_CATEGORY_VARIABLES_TYPE_NUMBER"] = "Block to write numbers";
Blockly.Msg["LT_CATEGORY_VARIABLES_TYPE_TEXT"] = "Block for writing text";
//----------------------------------------EVENTS---------------------------------------------------------------
Blockly.Msg["LT_EVENT_ON_DEVICE_TTIMER"] = 'Timer.';
Blockly.Msg["LT_EVENT_ON_DEVICE_TTEVENT"] = 'Event on device.';
Blockly.Msg["LT_CATEGORY_EVENTS_EVENT_DEVICE"] = 'Device event. Type:';
Blockly.Msg["LT_CATEGORY_EVENTS_EVENT_DEVICE_DEVICE"] = 'Event on:';
Blockly.Msg["LT_CATEGORY_EVENTS_EVENT_DEVICE_CONDITION"] = 'Event condition:';
Blockly.Msg["LT_CATEGORY_EVENTS_EVENT_DEVICE_CONDITION_TRUE"] = 'Do actions:';
Blockly.Msg["LT_CATEGORY_EVENTS_EVENT_DEVICE_CONDITION_FALSE"] = 'Else event condition:';
Blockly.Msg["LT_CATEGORY_EVENTS_EVENT_DEVICE_CONDITION_ON"] = 'Active';
Blockly.Msg["LT_CATEGORY_EVENTS_EVENT_DEVICE_CONDITION_OFF"] = 'Inactive';
Blockly.Msg["LT_CATEGORY_EVENTS_EVENT_DEVICE_CONDITION_ON_DOOR"] = 'Opened';
Blockly.Msg["LT_CATEGORY_EVENTS_EVENT_DEVICE_CONDITION_OFF_DOOR"] = 'Closed';
Blockly.Msg["LT_EVENT_DEVICE_CONDITION_SWITCH_FF"] = 'Releasing the key';
Blockly.Msg["LT_EVENT_DEVICE_CONDITION_SWITCH_FD"] = 'Holding the key';
Blockly.Msg["LT_EVENT_DEVICE_CONDITION_SWITCH_FC"] = 'Keystroke';
Blockly.Msg["LT_EVENT_DEVICE_DO_ONCE_IN"] = 'Do once in ';
//----------------------------------------GET------------------------------------------------------------------
Blockly.Msg["LT_CATEGORY_STATUS_DESCRIPTION"] = 'Get:';
//-----------------------------------------MESSANGER-----------------------------------------------------------
Blockly.Msg["LT_CATEGORY_NOTIFICATION_MESSANGER"] = '%3Send %1 message: %2';
Blockly.Msg["LT_CATEGORY_NOTIFICATION_MESSANGER_TT"] = 'Sending a message by the selected messenger';
Blockly.Msg["LT_CATEGORY_NOTIFICATION_MESSANGER_ADD_DEV"] = "Add device";
Blockly.Msg["LT_CATEGORY_NOTIFICATION_MESSANGER_ADD_CAM"] = "Add camera";
Blockly.Msg["LT_CATEGORY_NOTIFICATION_MESSANGER_DEV"] = "To device:";
Blockly.Msg["LT_CATEGORY_NOTIFICATION_MESSANGER_CAM"] = "Camera:";
Blockly.Msg["LT_CATEGORY_NOTIFICATION_MESSANGER_CAM_PICTURE"] = "Picture";
Blockly.Msg["LT_CATEGORY_NOTIFICATION_MESSANGER_CAM_VIDEO"] = "Video";
Blockly.Msg["LT_CATEGORY_NOTIFICATION_MESSANGER_CAM_VIDEO_TIME"] = 'Video duration in sec:';
Blockly.Msg["LT_CATEGORY_NOTIFICATION_MESSANGER_RECIPIENT"] = "Recipient";
//------------------------------------------CONTROL-----------------------------------------------------------
Blockly.Msg["LT_CATEGORY_CONTROL_DIMMER"] = '%2Dimmer: %1';
Blockly.Msg["LT_CATEGORY_CONTROL_BLINDS"] = '%2Blinds: %1';
Blockly.Msg["LT_CATEGORY_CONTROL_MDEIAPOINT_UUID"] = '%2Mediapoint: UUID %1';
Blockly.Msg["LT_CATEGORY_CONTROL_MDEIAPOINT"] = '%2Mediapoint: %1';
Blockly.Msg["LT_MT_URL"] = 'Url';
Blockly.Msg["LT_MT_SS"] = 'Softstart';
Blockly.Msg["LT_MT_SFP"] = 'Start from position';
Blockly.Msg["LT_CATEGORY_CONTROL_ACTION"] = 'Action';
Blockly.Msg["LT_OTHER_MUTE_UUID"] = 'Mute';
Blockly.Msg['LT_CATEGORY_CONTROL_PLAYLIST'] = 'Playlist';
Blockly.Msg["LT_SONOS_REPEAT"] = "Repeat";
Blockly.Msg["LT_SONOS_REPEATONETIMES"] = "RepeatOne";
Blockly.Msg["LT_SONOS_SHUFFLE"] = "Shuffle";
Blockly.Msg["LT_SONOS_CROSSFADE"] = "Crossfade";
Blockly.Msg["LT_MDEIAPOINT"] = 'Mediapoint';
Blockly.Msg["LT_TEXT_SPRINTF_VENTILATION"] = "Ventilation (Virtual)";
Blockly.Msg["LT_CATEGORY_CONTROL_EXE"] = '%3Select exe script: %1 %2';
Blockly.Msg["LT_CATEGORY_CONTROL_EXE_TT"] = 'Run script from server';
Blockly.Msg["LT_CATEGORY_CONTROL_LEAK"] = '%3Sensor: %1 Action: %2';
Blockly.Msg["LT_CATEGORY_CONTROL_LEAK_TT"] = 'Ignore leakage sensor for set time';
Blockly.Msg["LT_SRDSHT_COLUMN"] = 'column';
Blockly.Msg["LT_SRDSHT_PATH"] = 'Path to spreadsheet';
Blockly.Msg["LT_SRDSHT_DESCR"] = 'Writing data to a spreadsheet';
Blockly.Msg["LT_EMAIL_DESCR"] = 'Send data to email';
Blockly.Msg['LT_SRDSHT_DATE'] = 'Write date'
Blockly.Msg["LT_OTHER_PUSH_MESSAGE"] = "Message";
Blockly.Msg["LT_PUSH_MUTATOR_ID"] = "Application ID";
Blockly.Msg["LT_PUSH_MUTATOR_MODE"] = "Notification mode";
Blockly.Msg["LT_LOG_ERR_MSG"] = "Message";
Blockly.Msg["LT_WEBHOOK"] = "Make webhook";
Blockly.Msg["LT_FUNCTION_NAME"] = "Name";
Blockly.Msg["LT_FUNCTION_CALL"] = "Call";
Blockly.Msg["LT_FUNCTION_DALAY"] = "Delay: %1 Time: %2 %3 Repeat: %4";
Blockly.Msg["LT_FUNCTION_CANCEL"] = "Cancel";
Blockly.Msg["LT_FUNCTION_SECONDS"] = "Seconds";
Blockly.Msg["LT_FUNCTION_MILISECONDS"] = "Miliseconds";
Blockly.Msg["LT_FUNCTION_MINUTES"] = "Minutes";
Blockly.Msg["LT_FUNCTION_DELAYED_CODE"] = "Delayed code: %1 Time: %2 %3 Repeat: %4";
Blockly.Msg["LT_LOOP_HEAD"] = "Repeat %1 times";
Blockly.Msg["LT_LOOP_DO"] = "Do";
Blockly.Msg["LT_LOOP_BREAK"] = "Break";
Blockly.Msg["LT_LOOP_CONTINUE"] = "Continue";
Blockly.Msg["LT_OTHER_MODBUS"] = "ModBus: %1 Send to: %2 Comand: %3 Register: %4";
Blockly.Msg["LT_OTHER_MODBUS_READ"] = "Read";
Blockly.Msg["LT_OTHER_MODBUS_WRITE"] = "Write";
Blockly.Msg["LT_OTHER_MODBUS_ANSWER"] = "Answer";
Blockly.Msg["LT_OTHER_MODBUS_ANSWER_SHOW"] = "Print Answer";
Blockly.Msg["LT_OTHER_MODBUS_PRINT"] = "Print";
Blockly.Msg["LT_OTHER_MODBUS_GET"] = "Get sender";
Blockly.Msg["LT_OTHER_MODBUS_GET_COMAND"] = "Get comand";
Blockly.Msg["LT_OTHER_MODBUS_GET_BYTE"] = "Get byte";
Blockly.Msg["LT_OTHER_FLASH"] = "%1 Cell: %2 Value: %3";
Blockly.Msg["LT_OTHER_FLASH_WRITE"] = "Write";
Blockly.Msg["LT_OTHER_FLASH_READ"] = "Read";
Blockly.Msg["LT_NOTIFICATION_LOG_TT"] = "Outputting a message to the server log";
Blockly.Msg["LT_NOTIFICATION_PUSH_TT"] = "Sending push notification";
Blockly.Msg["LT_NOTIFICATION_BOX_TT"] = "Sending a message in a text field in the application";
Blockly.Msg["LT_CONTROL_RGB_TT"] = "RGB lamp state change";
Blockly.Msg["LT_CONTROL_DIMER_TT"] = "Dimer state change";
Blockly.Msg["LT_CONTROL_MEDIAPOINT_TT"] = "Mediapoint state change";
Blockly.Msg["LT_CONTROL_UUID_TT"] = "The change in the state of the mediato through uuid";
Blockly.Msg["LT_CONTROL_SONOS"] = "Sonos";
Blockly.Msg["LT_CONTROL_SONOS_TT"] = "Sonos control";
Blockly.Msg["LT_CONTROL_HEATING_TT"] = "Heating state change";
Blockly.Msg['LT_CC_TEMP0'] = "Setpoint heat";
Blockly.Msg['LT_CC_TEMP1'] = "Setpoint cool";
Blockly.Msg['LT_CC_HUM0'] = "Setpoint humidify";
Blockly.Msg['LT_CC_HUM1'] = "Setpoint dry";
Blockly.Msg['LT_CC_CO2'] = "Setpoint CO2";
Blockly.Msg['LT_CC_WF'] = "Setpoint watm-floor";
Blockly.Msg['LT_CONTROL_CC_TT'] = "Control of climate-control module";
Blockly.Msg["LT_CONTROL_CONDITIONER_TT"] = "Conditioner state change";
Blockly.Msg["LT_CONTROL_VENTILATION_TT"] = "Changing the state of ventilation";
Blockly.Msg["LT_CONTROL_STATUS_ON_OFF_TT"] = "Turn the device on or off";
Blockly.Msg["LT_DATETIME_TT"] = "Is the time in a given period of time and day of the week";
Blockly.Msg["LT_STATUS_GET_STATUS_TT"] = "Get device status";
//---------------------------------------------ALERTS---------------------------------------------
Blockly.Msg["LT_ERROR_EMPTY_IF_ALLERT"] = "Error! In the if construction there can be no empty conditions!";
Blockly.Msg["LT_ERROR_EMPTY_DEVICE"] = "Error! Device address can not be empty!";
Blockly.Msg["LT_ERROR_EMPTY_VAR"] = "Error! There is no such variable!";
Blockly.Msg["LT_ERROR_SPRDSHT_PATH"] = "Error! Invalid path to spreadsheet!";
Blockly.Msg["LT_ERROR_EMAIL"] = "Error! Incorrect E-Mail Address!";
Blockly.Msg["LT_ERROR_MATH_DIV_ZERO"] = "Error! Division by zero!";
Blockly.Msg["LT_ERROR_EMPTY_PLAYLIST"] = "Error! Playlist can not be empty!";
Blockly.Msg["LT_ERROR_FUNC_SAME_NAME"] = "Error! Function with the same name already exist!";
Blockly.Msg["LT_ERROR_VAR_SAME_NAME"] = "Error! Variable with the same name already exist!";
Blockly.Msg["LT_ERROR_MAX_EXCEED"] = "Error! Maximum number of characters exceeded!";
Blockly.Msg["LT_ERROR_COUNT_NOT_EQUAL"] = "Error! Real devices count is not equal to count devices in text!";
Blockly.Msg["LT_ERROR_INCORR_ARRAY"] = "Error! Incorrect array values!";
Blockly.Msg["LT_ERROR_EQUAL_MASTERS"] = "Error! Same master deivces!";
Blockly.Msg["LT_ERROR_MASTER_USING"] = "Error! The blocks use the device that using in another block as master device!";
//-------------------------------------------Email-------------------------------------------
Blockly.Msg["LT_EMAIL_DSCR"] = "Send mail to";
Blockly.Msg["LT_EMAIL_MSG_DSCR"] = "Message";
Blockly.Msg["LT_EMAIL_MSG_THEME_DSCR"] = "Theme";
//-------------------------------------------Flash-------------------------------------------
Blockly.Msg["LT_OTHER_WORD_FLASH"] = "Flash";
//-------------------------------------------Teamplates--------------------------------------
Blockly.Msg["LT_SECURITY_AREA"] = "Area";
Blockly.Msg["LT_SECURITY_DESCR"] = "Security System";
Blockly.Msg["LT_SECURITY_TIMER_TEXT_DESCR"] = "Timer Start Settings";
Blockly.Msg["LT_SECURITY_TIMER_TEXT"] = "The security system is turned on after";
Blockly.Msg["LT_SECURITY_WARNING_TEXT_DESCR"] = "Warning Settings";
Blockly.Msg["LT_SECURITY_WARNING_TEXT"] = "Warning! Movement in the entrance area";
Blockly.Msg["LT_SECURITY_ON_MSG_TEXT_DESCR"] = "Settings when the security is turned on";
Blockly.Msg["LT_SECURITY_ON_MSG_TEXT"] = "Security Mode Enabled";
Blockly.Msg["LT_SECURITY_OFF_MSG_TEXT_DESCR"] = "Settings when security is disabled";
Blockly.Msg["LT_SECURITY_OFF_MSG_TEXT"] = "Security Mode Disabled";
Blockly.Msg["LT_SECURITY_ERROR_MSG_TEXT_DESCR"] = "Error Settings";
Blockly.Msg["LT_SECURITY_ERROR_MSG_TEXT"] = "Error! Not all areas are empty";
Blockly.Msg["LT_SECURITY_RCOVERY_MSG_TEXT_DESCR"] = "Settings when restoring an area";
Blockly.Msg["LT_SECURITY_RCOVERY_MSG_TEXT"] = "The following areas have been restored";
Blockly.Msg["LT_SECURITY_ALARM_MSG_TEXT_DESCR"] = "Alarm Settings";
Blockly.Msg["LT_SECURITY_ALARM_MSG_TEXT"] = "Alarm! Movement in the field";
Blockly.Msg["LT_SECURITY_RECOVERY_TIME_MSG_TEXT"] = "Recovery Time";
Blockly.Msg["LT_SECURITY_TIMER_TIME_MSG_TEXT"] = "Timer: amount of time in seconds";
Blockly.Msg["LT_MODBUS_CONTROLLER_DESCR"] = "Modbus controller";
Blockly.Msg["LT_MODBUS_CONTROLLER_TOOLTIP"] = "Provides controlling the devices like conditioner or ventilation via modbus protocol";
Blockly.Msg["LT_MODBUS_CONTROLLER_REG"] = "register";
Blockly.Msg["LT_MODBUS_CONTROLLER_ADDR"] = "Address";
Blockly.Msg["LT_MODBUS_CONTROLLER_ON"] = "On";
Blockly.Msg["LT_MODBUS_CONTROLLER_OFF"] = "Off";
Blockly.Msg["LT_MODBUS_CONTROLLER_TMIN"] = "Enter t-min value";
Blockly.Msg["LT_MODBUS_CONTROLLER_OFFS"] = "Enter temperature offset";
Blockly.Msg["LT_MODBUS_CONTROLLER_MODE"] = "Select function";
Blockly.Msg["LT_MODBUS_CONTROLLER_TMODEBD"] = "Binary-decimal";
Blockly.Msg["LT_MODBUS_CONTROLLER_TMODEMT"] = "Multiply by 10";
Blockly.Msg["LT_MODBUS_CONTROLLER_MODEFR"] = "Fahrenheit";
Blockly.Msg["LT_MODBUS_CONTROLLER_MODEDF"] = "Default";
Blockly.Msg["LT_MODBUS_CONTROLLER_ID"] = "ID";
Blockly.Msg["LT_GENERAL"] = "General";
Blockly.Msg["LT_BASIC"] = "Basic";
Blockly.Msg["LT_SETTINGS"] = "Settings";
Blockly.Msg["LT_IMITATION"] = "Presence imitation";
Blockly.Msg["LT_IMITATION_AUTOOFF"] = "Turn off all devices";
Blockly.Msg["LT_IMITATION_BEG"] = "At the beginning";
Blockly.Msg["LT_IMITATION_END"] = "At the ending";
Blockly.Msg["LT_PERIOD"] = "Period";
Blockly.Msg["LT_MOVING_MUSIC"] = "Following music";
Blockly.Msg["LT_SAVE_DEVICE_STATE"] = "Save and restore device status";
Blockly.Msg["LT_RELATED_ACTIONS"] = "Related actions";
Blockly.Msg["LT_MASTER"] = "Master";
Blockly.Msg["LT_SLAVE"] = "Slave";
Blockly.Msg["LT_TEAMPLATES"] = "Templates";
Blockly.Msg["LT_USE_MODBUS_MULTIPLY_COMMAND"] = "Multiple writing";
Blockly.Msg["LT_STRING_SENDER_TT"] = "Status sender";
Blockly.Msg["LT_STRING_SENDER"] = "Status sender";
Blockly.Msg["LT_STRING_DEV"] = "Select device:";
Blockly.Msg["LT_STRING_COMMAND"] = "Input status";
Blockly.Msg["LT_OTHER_WEATHER"] = " Get";
Blockly.Msg["LT_OTHER_WEATHER1"] = "Weather";
Blockly.Msg["LT_OTHER_WEATHER2"] = "Humidity";
Blockly.Msg["LT_OTHER_WEATHER3"] = "Temperature";
Blockly.Msg["LT_OTHER_WEATHER4"] = "Pressure";
Blockly.Msg["LT_OTHER_WEATHER5"] = "Wind";
Blockly.Msg["LT_OTHER_WEATHER6"] = "Wind direction";
Blockly.Msg["LT_OTHER_WEATHER7"] = "Illumination";
Blockly.Msg["LT_OTHER_WEATHER8"] = "Sunrise";
Blockly.Msg["LT_OTHER_WEATHER9"] = "Sunset";
Blockly.Msg["LT_OTHER_WEATHER10"] = "Rain";
Blockly.Msg["LT_OTHER_WEATHER11"] = "Snow";
Blockly.Msg["LT_OTHER_CCGET"] = "Climate control: %1 %2";
Blockly.Msg["LT_OTHER_CCGET1"] = "On/Off";
Blockly.Msg["LT_OTHER_CCGET2"] = "Temperature PID";
Blockly.Msg["LT_OTHER_CCGET3"] = "Humidity PID";
Blockly.Msg["LT_OTHER_CCGET4"] = "CO2 PID";
Blockly.Msg["LT_OTHER_CCGET5"] = "Warm floor PID";
Blockly.Msg["LT_OTHER_CCGET6"] = "Setpoint heat";
Blockly.Msg["LT_OTHER_CCGET7"] = "Setpoint cool";
Blockly.Msg["LT_OTHER_CCGET8"] = "Setpoint humidify";
Blockly.Msg["LT_OTHER_CCGET9"] = "Setpoint dry";
Blockly.Msg["LT_OTHER_CCGET10"] = "Setpoint CO2";
Blockly.Msg["LT_OTHER_CCGET11"] = "Setpoint warm floor";
Blockly.Msg["LT_OTHER_CCGET12"] = "Current temperature";
Blockly.Msg["LT_OTHER_CCGET13"] = "Current humidity";
Blockly.Msg["LT_OTHER_CCGET14"] = "Current CO2 level";
Blockly.Msg["LT_OTHER_CCGET15"] = "Current warm floor temperature";
Blockly.Msg["LT_OTHER_MODBUS_READCOIL"] = "Read Coil";
Blockly.Msg["LT_OTHER_MODBUS_WRITECOIL"] = "Write Coil";